name = "uploader-worker-prod"
main = "src/index.ts"
compatibility_date = "2025-10-20"

# Replace with your account ID (get from: wrangler whoami)
account_id = "YOUR_CLOUDFLARE_ACCOUNT_ID"

# R2 Bucket binding
[[r2_buckets]]
binding = "IMAGES"
bucket_name = "YOUR_R2_BUCKET_NAME"

# KV namespace for caching GitHub user info
[[kv_namespaces]]
binding = "USER_CACHE"
id = "YOUR_KV_NAMESPACE_ID"

# Cloudflare AI binding
[ai]
binding = "AI"

# D1 Database binding
[[d1_databases]]
binding = "DB"
database_name = "YOUR_D1_DATABASE_NAME"
database_id = "YOUR_D1_DATABASE_ID"

# Environment variables
[vars]
R2_PUBLIC_BASE = "https://YOUR_CDN_DOMAIN.com"  # Your CDN domain (where images are served)
MAX_UPLOAD_SIZE = "10485760"  # 10MB in bytes (single image limit)
ALLOWED_ORIGINS = "https://yourdomain.com,https://www.yourdomain.com,https://github.com,https://*.yourproject.pages.dev,http://localhost:3000"
DAILY_QUOTA_BYTES = "2097152000"  # 2000 MB daily quota in bytes
ABUSE_DETECTION_ENABLED = "true"  # Enable abuse detection and IP banning
TURNSTILE_ENABLED = "false"  # Disable Cloudflare Turnstile verification
AUTH_ENABLED = "true"  # Enable GitHub OAuth authentication
CONTENT_MODERATION_ENABLED = "true"  # Enable AI-powered content moderation
# ADMIN_USERS - Set via: npx wrangler secret put ADMIN_USERS
# ADMIN_TOKEN - Set via: npx wrangler secret put ADMIN_TOKEN
# TELEGRAM_BOT_TOKEN = "YOUR_BOT_TOKEN"  # Get from @BotFather
# TELEGRAM_CHAT_ID = "YOUR_CHAT_ID"      # Your Telegram chat ID
# TURNSTILE_SECRET_KEY = "YOUR_TURNSTILE_SECRET"  # Get from Cloudflare Dashboard

# Durable Object for daily quota tracking
[[durable_objects.bindings]]
name = "UPLOAD_QUOTA"
class_name = "UploadQuota"
script_name = "uploader-worker-prod"

# Durable Object for IP blacklist and abuse detection
[[durable_objects.bindings]]
name = "IP_BLACKLIST"
class_name = "IPBlacklist"
script_name = "uploader-worker-prod"

[[migrations]]
tag = "v1"
new_sqlite_classes = ["UploadQuota"]

[[migrations]]
tag = "v2"
new_sqlite_classes = ["IPBlacklist"]

# Production environment
[env.production]
name = "uploader-worker-prod"

# Optional: bind to custom domain for uploads
# routes = [
#   { pattern = "upload.yourdomain.com/*", zone_name = "yourdomain.com" }
# ]

[env.production.vars]
R2_PUBLIC_BASE = "https://YOUR_CDN_DOMAIN.com"
MAX_UPLOAD_SIZE = "10485760"
ALLOWED_ORIGINS = "https://yourdomain.com,https://www.yourdomain.com,https://github.com,https://*.yourproject.pages.dev,http://localhost:3000"
DAILY_QUOTA_BYTES = "2097152000"
ABUSE_DETECTION_ENABLED = "true"  # Enable abuse detection and IP banning
TURNSTILE_ENABLED = "false"  # Disable Cloudflare Turnstile verification
DAILY_UPLOAD_LIMIT_PER_IP = "20"  # 每个 IP 每天最多上传 20 张
AUTH_ENABLED = "true"  # Enable GitHub OAuth authentication
CONTENT_MODERATION_ENABLED = "true"  # Enable AI-powered content moderation
# ADMIN_USERS - Set via: npx wrangler secret put ADMIN_USERS --env production
# ADMIN_TOKEN - Set via: npx wrangler secret put ADMIN_TOKEN --env production
# TELEGRAM_BOT_TOKEN - Set via: npx wrangler secret put TELEGRAM_BOT_TOKEN --env production
# TELEGRAM_CHAT_ID - Set via: npx wrangler secret put TELEGRAM_CHAT_ID --env production

[[env.production.r2_buckets]]
binding = "IMAGES"
bucket_name = "YOUR_R2_BUCKET_NAME"

[env.production.ai]
binding = "AI"

# D1 Database binding for production
[[env.production.d1_databases]]
binding = "DB"
database_name = "YOUR_D1_DATABASE_NAME"
database_id = "YOUR_D1_DATABASE_ID"

[[env.production.durable_objects.bindings]]
name = "UPLOAD_QUOTA"
class_name = "UploadQuota"
script_name = "uploader-worker-prod"

[[env.production.durable_objects.bindings]]
name = "IP_BLACKLIST"
class_name = "IPBlacklist"
script_name = "uploader-worker-prod"

[[env.production.kv_namespaces]]
binding = "USER_CACHE"
id = "YOUR_KV_NAMESPACE_ID"

[[env.production.migrations]]
tag = "v1"
new_sqlite_classes = ["UploadQuota"]

[[env.production.migrations]]
tag = "v2"
new_sqlite_classes = ["IPBlacklist"]